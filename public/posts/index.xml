<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Brian Ardiles</title>
    <link>brianardiles.com/posts/</link>
    <description>Recent content in Posts on Brian Ardiles</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-ar</language>
    <lastBuildDate>Sat, 07 Oct 2023 09:03:20 -0800</lastBuildDate><atom:link href="brianardiles.com/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Desarrollando una app de seguimiento de agua personal sin experiencia en Swift, utilizando ChatGPT</title>
      <link>brianardiles.com/posts/desarrollando-una-app-de-seguimiento-de-agua-personal-sin-experiencia-en-swift-utilizando-chatgpt/</link>
      <pubDate>Sat, 07 Oct 2023 09:03:20 -0800</pubDate>
      
      <guid>brianardiles.com/posts/desarrollando-una-app-de-seguimiento-de-agua-personal-sin-experiencia-en-swift-utilizando-chatgpt/</guid>
      <description>Existen cientos de apps para tracking de cuanta agua tomamos al día. Pero el 99,9% de las apps tiene al menos 1 de los siguientes problemas:
Requiere registro/loggin Necesita conexión a internet Tienen ads UI compleja Tracking intrusivo (para mas ads) No tiene soporte para Apple Watch Por lo que opte por crear mi propia app intentando no caer en ninguno del los problemas anteriores. Hice algunos wireframes a mano con la idea que tenia en la cabeza.</description>
    </item>
    
    <item>
      <title>Cómo forzar un request HTTP/1 en Go</title>
      <link>brianardiles.com/posts/forzar-http-1-go/</link>
      <pubDate>Fri, 20 Nov 2020 09:03:20 -0800</pubDate>
      
      <guid>brianardiles.com/posts/forzar-http-1-go/</guid>
      <description>HTTP/2 es una versión más moderna y eficiente de HTTP que tiene algunas diferencias importantes con respecto a HTTP/1. En HTTP/2, todos los headers son transmitidos en formato binario y se espera que sean en minúscula. Esto significa que si envía un encabezado con mayúsculas, es posible que no sean reconocidos por el servidor y, por lo tanto, no se procesen correctamente.
Por ejemplo, si mandamos un header como POWERED_BY sin avisar y sin mostrar ningun tipo de log o warning el cliente de HTTP/2 va a modificar y enviar el header como powered_by Causando que el servicio que esta esperando el header todo en mayusculas, lo reciba todo en minusculas, eso haria que no encuentre el header y por lo tanto entienda que el header no fue enviado, ejecundo un flujo totalmente distinto.</description>
    </item>
    
    <item>
      <title>Como saber si dos strings son permutaciones con Go</title>
      <link>brianardiles.com/posts/go-permutaciones/</link>
      <pubDate>Fri, 20 Nov 2020 09:03:20 -0300</pubDate>
      
      <guid>brianardiles.com/posts/go-permutaciones/</guid>
      <description>Que es una permutacion Para saber si dos strings son permutaciones, primero tenemos que saber que es una permutacion, son aquellas palabras que contienen exactamente los mismos caracteres, pero esta ordenados de una manera distinta, por ejemplo, una permutacion de AUTO podría ser ATOU, otra podría ser OAUT, etc
Sabiendo esto podemos empezar a escribir el programa en Go que nos diga si dos strings son permutaciones o no. Hay varias formas de hacerlo, algunas mas optimas que otras</description>
    </item>
    
    <item>
      <title>Goroutines y channels en Go</title>
      <link>brianardiles.com/posts/go-channels/</link>
      <pubDate>Fri, 20 Nov 2020 09:03:20 -0300</pubDate>
      
      <guid>brianardiles.com/posts/go-channels/</guid>
      <description>Que es una goroutine? Una goroutine es como un hilo, pero manejado por Go. Es mas liviano que un hilo tradicional y al estar completamente integrado al lenguaje, es mas sencillo de implementar.
Que beneficios tienen? Las principales ventajas que tienen estas goroutines es que están muy bien optimizadas en la gestión de recursos, por lo tanto es posible tener cientos o hasta miles de goroutines a un costo mucho menor que si fueran hilos tradicionales.</description>
    </item>
    
  </channel>
</rss>
